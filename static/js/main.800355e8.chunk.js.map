{"version":3,"sources":["components/Maletin/maletin.svg","components/Maletin/Maletin.jsx","components/Maletines/Maletines.jsx","components/Mensaje/Mensaje.jsx","components/MaletinSeleccionado/MaletinSeleccionado.jsx","components/Segment/Segment.jsx","components/ProgressTracker/ProgressTracker.jsx","utils.js","components/Game/Game.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","Maletin","numero","valor","className","onClick","appear","leave","durationAppear","component","e","role","tabIndex","focusable","src","maletin","alt","defaultProps","Maletines","maletines","onClickedMaletin","durationLeave","map","m","key","Mensaje","children","MaletinSeleccionado","mensaje","Segment","steps","completed","prevSum","completedCallback","React","useState","completedBar","setCompletedBar","useEffect","widthBar","style","flexGrow","width","ProgressTracker","stepsPerSegment","completedSteps","onSegmentCompleted","segments","val","segment","i","seg","pickRandomFromArray","array","Math","floor","random","length","generarMaletines","valores","unorderedValues","generados","includes","push","randomizeArray","generarOferta","reduce","acc","value","quitarMaletin","filter","malet","VALORES","STEPS_PER_SEGMENT","MySwal","withReactContent","Swal","swals","fire","title","html","footer","confirmButtonColor","valorDeOferta","buttons","allowOutsideClick","showConfirmButton","mixin","toast","position","timer","timerProgressBar","onOpen","addEventListener","stopTimer","resumeTimer","icon","Button","props","text","type","backgroundColor","RigthSide","valoresAbiertos","Game","maletinesDisponibles","setMaletinesDisponibles","isFirstSelection","setFirstSelection","seleccionado","setSeleccionado","setValoresAbiertos","tratoAceptado","setTratoAceptado","oferta","setOferta","disableBtnContraoferta","setDisableBtnContraoferta","displayContraoferta","valoresNoAbiertos","input","inputAttributes","min","max","step","inputValue","then","result","valorContraoferta","porcentajeRandom","isValidContraoferta","onTratoAceptado","clickConfirm","clickCancel","disabled","display","event","prev","concat","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.800355e8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/maletin.64d3e995.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Animate from 'animate.css-react';\nimport maletin from './maletin.svg';\nimport 'animate.css/animate.css';\nimport './Maletin.scss';\n\n/**\n * Representa a un maletin\n * @component\n */\nconst Maletin = ({\n  numero, valor, className, onClick,\n}) => (\n  <Animate\n    appear=\"fadeIn\"\n    leave=\"fadeOut\"\n    durationAppear={500}\n    component=\"div\"\n  >\n    {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events */}\n    <div className={`maletin ${className}`} onClick={(e) => onClick(e, numero, valor)} role=\"button\" tabIndex={0} focusable>\n      <img src={maletin} alt=\"\" />\n      <span>{numero}</span>\n    </div>\n\n\n  </Animate>\n\n);\n\nMaletin.propTypes = {\n  /** Numero que va a mostrar el maletin en el exterior */\n  numero: PropTypes.number.isRequired,\n  /** Valor interno del maletin */\n  valor: PropTypes.number.isRequired,\n  /** Clase que se le agregara ademas de la que ya posee por ser un maletin \"maletin\" */\n  className: PropTypes.string,\n  /** Funcion a ejecutar cuando se haga click sobre el maletin */\n  onClick: PropTypes.func,\n};\n\nMaletin.defaultProps = {\n  className: '',\n  onClick: () => {},\n};\n\nexport default Maletin;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Animate from 'animate.css-react';\nimport Maletin from '../Maletin/Maletin';\nimport './Maletines.scss';\nimport 'animate.css/animate.css';\n\nconst Maletines = ({ maletines, onClickedMaletin }) => (\n  <div className=\"maletines\">\n    <Animate\n      appear=\"fadeIn\"\n      leave=\"bounceOut\"\n      durationAppear={1000}\n      durationLeave={300}\n      component=\"div\"\n    >\n      {\n        maletines.map((m) => <Maletin key={`maletin-${m.numero}`} numero={m.numero} valor={m.valor} onClick={onClickedMaletin} />)\n      }\n    </Animate>\n  </div>\n);\n\nMaletines.propTypes = {\n  maletines: PropTypes.arrayOf(PropTypes.shape({\n    numero: PropTypes.number,\n    valor: PropTypes.number,\n  })).isRequired,\n  onClickedMaletin: PropTypes.func.isRequired,\n};\n\nexport default Maletines;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Animate from 'animate.css-react';\nimport 'animate.css/animate.css';\n\nconst Mensaje = ({ children }) => (\n  <Animate\n    appear=\"zoomIn\"\n    leave=\"fadeOut\"\n    durationAppear={2000}\n    component=\"div\"\n  >\n    {children}\n  </Animate>\n);\n\nMensaje.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default Mensaje;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Maletin from '../Maletin/Maletin';\nimport './MaletinSeleccionado.scss';\n\nconst MaletinSeleccionado = ({ maletin, mensaje }) => (\n  <div className=\"display-seleccionado\">\n    <span>{mensaje}</span>\n    <Maletin\n      className=\"seleccionado\"\n      numero={maletin.numero}\n      valor={maletin.valor}\n      onClick={() => {}}\n    />\n  </div>\n);\n\nMaletinSeleccionado.propTypes = {\n  /** Representa a los datos de un maletin */\n  maletin: PropTypes.shape({\n    numero: PropTypes.number,\n    valor: PropTypes.number,\n  }).isRequired,\n  mensaje: PropTypes.string.isRequired,\n\n};\n\nexport default MaletinSeleccionado;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst Segment = ({\n  steps, completed, prevSum, completedCallback,\n}) => {\n  const [completedBar, setCompletedBar] = React.useState(false);\n\n  React.useEffect(() => {\n    if (completed - prevSum >= steps && !completedBar) {\n      completedCallback();\n      setCompletedBar(true);\n    }\n  }, [steps, completed, completedCallback, prevSum, completedBar, setCompletedBar]);\n\n  const widthBar = ((completed - prevSum) / steps) * 100;\n\n\n  return (\n    <div className=\"segment\" style={{ flexGrow: steps }}>\n      <div className=\"bar\">\n        <div className=\"bar-completed\" style={{ width: widthBar >= 0 ? `${widthBar}%` : '0%' }}> </div>\n      </div>\n      <div className={`segment-completed ${completed - prevSum >= steps ? 'segment-completed-filled' : ''}`}> </div>\n    </div>\n  );\n};\n\nSegment.propTypes = {\n  steps: PropTypes.number.isRequired,\n  completed: PropTypes.number.isRequired,\n  prevSum: PropTypes.number.isRequired,\n  completedCallback: PropTypes.func,\n};\n\nSegment.defaultProps = {\n  completedCallback: () => {},\n};\n\nexport default Segment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './progress-tracker.scss';\n\nimport Segment from '../Segment/Segment';\n\nconst ProgressTracker = ({ stepsPerSegment, completedSteps, onSegmentCompleted }) => {\n  let prevSum = 0;\n  const segments = stepsPerSegment.map((val) => ({ steps: val, completed: onSegmentCompleted }));\n\n  return (\n    <div className=\"tracker\">\n      {\n        segments.map((segment, i) => {\n          const seg = (\n            <Segment\n              key={`segment-${i + 1}`}\n              steps={segment.steps}\n              completed={completedSteps}\n              prevSum={prevSum}\n              completedCallback={segment.completed}\n            />\n          );\n          prevSum += segment.steps;\n          return seg;\n        })\n      }\n    </div>\n  );\n};\n\nProgressTracker.propTypes = {\n  stepsPerSegment: PropTypes.arrayOf(PropTypes.number).isRequired,\n  completedSteps: PropTypes.number.isRequired,\n  onSegmentCompleted: PropTypes.func,\n};\n\nProgressTracker.defaultProps = {\n  onSegmentCompleted: () => {},\n};\n\nexport default ProgressTracker;\n","\n/**\n * Toma un elemento aleatorio del array pasado como parametro\n * @param {array} array Array del cual se quiere tomar un item aleatorio\n * @returns {number} Elemento aleatorio del array\n */\nconst pickRandomFromArray = (array) => {\n  const randomIndex = Math.floor(Math.random() * array.length);\n  const random = array[randomIndex];\n  return random;\n};\n\nconst randomizeArray = (array) => {\n  const generados = [];\n  let random;\n\n  while (generados.length < array.length) {\n    random = pickRandomFromArray(array);\n    if (!generados.includes(random)) {\n      generados.push(random);\n    }\n  }\n  return generados;\n};\n\n\nconst generarMaletines = (valores) => {\n  const unorderedValues = randomizeArray(valores);\n  const maletines = [];\n\n  // eslint-disable-next-line no-plusplus\n  for (let i = 0; i < valores.length; i++) {\n    maletines.push({ numero: i + 1, valor: unorderedValues[i] });\n  }\n  return maletines;\n};\n\nconst generarOferta = (array) => {\n  /* TODO:\n        Cambiar manera en que se realiza el calculo de la oferta,\n  */\n  const suma = array.reduce((acc, value) => acc + value);\n  return suma / array.length;\n};\n\n\nconst quitarMaletin = (maletines, numero) => maletines.filter((malet) => malet.numero !== numero);\n\n\nconst isValidContraoferta = (oferta, valorContraoferta) => {\n  /* Entre 15% y 20% */\n  const porcentajeRandom = (15 + (Math.random() * 5)) / 100;\n  const valorMaximoContraoferta = Math.floor(oferta + (oferta * porcentajeRandom));\n  return valorContraoferta < valorMaximoContraoferta;\n};\n\nexport {\n  pickRandomFromArray,\n  randomizeArray,\n  generarMaletines,\n  generarOferta,\n  quitarMaletin,\n  isValidContraoferta,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport Maletines from '../Maletines/Maletines';\nimport Mensaje from '../Mensaje/Mensaje';\nimport MaletinSeleccionado from '../MaletinSeleccionado/MaletinSeleccionado';\nimport ProgressTracker from '../ProgressTracker/ProgressTracker';\n\n\nimport './Game.scss';\n\nimport {\n  generarMaletines,\n  generarOferta,\n  quitarMaletin,\n  isValidContraoferta,\n} from '../../utils';\n\n/**\n * Valores de los maletines\n */\nconst VALORES = [\n  1, 2, 5, 10, 25, 50, 75, 100, 200, 300, 400, 500, 750, 1000,\n  2500, 5000, 10000, 20000, 30000, 40000, 50000, 75000, 100000, 250000, 500000, 1000000];\n\n/**\n * Maletines que se deben abrir antes de cada contraoferta\n */\nconst STEPS_PER_SEGMENT = [6, 5, 4, 3, 2, 1, 1, 1, 1];\n\nconst MySwal = withReactContent(Swal);\n\nconst swals = {\n  bienvenida: () => {\n    MySwal.fire({\n      title: <p>Bienvenido</p>,\n      html: <p>Selecciona un maletin para empezar a jugar</p>,\n      footer: 'Medio Trato',\n      confirmButtonColor: 'Gold',\n    });\n  },\n  oferta: (valorDeOferta, buttons) => {\n    MySwal.fire({\n      allowOutsideClick: false,\n      title: <p>Oferta</p>,\n      html: (\n        <div>\n          <p>El tesorero te ofrece:</p>\n          <h2>{`$ ${valorDeOferta}`}</h2>\n        </div>\n      ),\n      footer: buttons,\n      showConfirmButton: false,\n    });\n  },\n  ofertaNoAceptada: () => {\n    const Toast = Swal.mixin({\n      toast: true,\n      position: 'top-end',\n      showConfirmButton: false,\n      timer: 3000,\n      timerProgressBar: true,\n      onOpen: (toast) => {\n        toast.addEventListener('mouseenter', Swal.stopTimer)\n        toast.addEventListener('mouseleave', Swal.resumeTimer)\n      },\n    });\n\n    Toast.fire({\n      icon: 'error',\n      title: 'La contraoferta no fue aceptada'\n    });\n  },\n\n};\n\nconst Button = ({text, style, onClick}, props) => {\n  return (\n    <button\n      type=\"button\"\n      className=\"swal2-confirm swal2-styled\"\n      onClick={onClick}\n      style={{ backgroundColor: 'gold', ...style }}\n      {...props}\n    >\n      {text}\n    </button>\n  );\n};\n\nconst Game = () => {\n  const [maletinesDisponibles, setMaletinesDisponibles] = React.useState([]);\n  const [isFirstSelection, setFirstSelection] = React.useState(true);\n  const [seleccionado, setSeleccionado] = React.useState({});\n  const [valoresAbiertos, setValoresAbiertos] = React.useState([]);\n  const [tratoAceptado, setTratoAceptado] = React.useState(false);\n  const [oferta, setOferta] = React.useState(0);\n  const [disableBtnContraoferta, setDisableBtnContraoferta] = React.useState(false);\n\n  // Esto se ejecuta solo al montar el componente\n  React.useEffect(() => {\n    swals.bienvenida();\n\n    setMaletinesDisponibles(generarMaletines(VALORES));\n  }, []);\n\n  const displayContraoferta = () => {\n    const valoresNoAbiertos = VALORES.filter((valor) => !valoresAbiertos.includes(valor));\n    const valorDeOferta = Math.floor(generarOferta(valoresNoAbiertos));\n\n    MySwal.fire({\n      title: 'Contraoferta',\n      input: 'range',\n      inputAttributes: {\n        min: valorDeOferta,\n        max: valorDeOferta * 1.5,\n        step: 1,\n      },\n      inputValue: valorDeOferta,\n      text: 'Selecciona el valor de la contraoferta',\n      allowOutsideClick: false,\n      footer: false,\n      confirmButtonColor: 'Gold',\n    }).then((result) => {\n\n      if (isValidContraoferta(valorDeOferta, result.value)) {\n        setOferta(result.value);\n        setTratoAceptado(true);\n      } else {\n        swals.ofertaNoAceptada();\n        setDisableBtnContraoferta(true);\n      }\n    });\n  };\n\n\n  const onTratoAceptado = () => {\n    setTratoAceptado(true);\n    MySwal.clickConfirm();\n  };\n\n  const ofertar = () => {\n    const valoresNoAbiertos = VALORES.filter((valor) => !valoresAbiertos.includes(valor));\n    const valorDeOferta = Math.floor(generarOferta(valoresNoAbiertos));\n\n    swals.oferta(\n      valorDeOferta,\n      (\n        <div className=\"footer-buttons\">\n          <Button text=\"Trato\" onClick={onTratoAceptado} />\n          <Button text=\"No hay trato\" onClick={() => MySwal.clickCancel()} />\n          <Button\n            disabled={disableBtnContraoferta}\n            text=\"Contraoferta\"\n            onClick={displayContraoferta}\n            style={disableBtnContraoferta ? { display: 'none' } : {}}\n          />\n        </div>\n      ),\n    );\n    setOferta(valorDeOferta);\n  };\n\n  const maletinClickeado = (event, numero, valor) => {\n    if (isFirstSelection) {\n      setSeleccionado({ numero, valor });\n      setFirstSelection(false);\n\n      setMaletinesDisponibles((prev) => quitarMaletin(prev, numero));\n    } else if (!tratoAceptado) {\n      setValoresAbiertos((prev) => [].concat(prev, valor));\n      setMaletinesDisponibles((prev) => quitarMaletin(prev, numero));\n    }\n  };\n\n  return (\n    <div className=\"game\">\n      <div className=\"left\">\n        <h1 className=\"title\">Medio/Trato!</h1>\n\n        <ProgressTracker\n          stepsPerSegment={STEPS_PER_SEGMENT}\n          completedSteps={valoresAbiertos.length}\n          onSegmentCompleted={ofertar}\n        />\n\n        {\n          isFirstSelection\n          && <MaletinSeleccionado maletin={{}} mensaje=\"Selecciona un maletin\" />\n        }\n\n\n        {\n          !isFirstSelection\n          && <MaletinSeleccionado maletin={seleccionado} mensaje=\"Este es tu maletin\"/>\n        }\n        <Maletines maletines={maletinesDisponibles} onClickedMaletin={maletinClickeado} />\n\n\n\n        {\n          tratoAceptado && (\n          <Mensaje>\n            <div className=\"trato-aceptado\">\n              <h2>{`Ganaste $ ${oferta}`}</h2>\n              <span>{`Tu maletin tenia $ ${seleccionado.valor}`}</span>\n            </div>\n          </Mensaje>\n          )\n        }\n\n        {\n          (maletinesDisponibles.length === 0) && (\n          <Mensaje>\n            <h2>{`Ganaste $ ${seleccionado.valor}`}</h2>\n          </Mensaje>\n          )\n        }\n\n\n      </div>\n      <RigthSide valoresAbiertos={valoresAbiertos} />\n    </div>\n  );\n};\n\nconst RigthSide = ({ valoresAbiertos }) => (\n  <div className=\"rigth\">\n\n    {\n      VALORES.map((valor) => (\n\n        <div key={`valores-${valor}`} className={valoresAbiertos.includes(valor) ? 'valor valor-abierto' : 'valor'}>\n          <div className=\"valor-disponible\">{`$ ${valor}`}</div>\n        </div>\n\n      ))\n    }\n  </div>\n);\n\nRigthSide.propTypes = {\n  valoresAbiertos: PropTypes.arrayOf(PropTypes.number).isRequired,\n};\n\nexport default Game;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable no-console */\n/* eslint-disable no-use-before-define */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './components/Game/Game';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Game />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register();\n"],"sourceRoot":""}